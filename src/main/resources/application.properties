# Basic Application Configuration
spring.application.name=MediConnect Healthcare Management System

# Database Configuration - PostgreSQL (with environment variable overrides)
# You can override these via environment variables DB_URL, DB_USERNAME, DB_PASSWORD
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/mediconnect}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:lalith1224}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
# Use update for dev. Consider validate or none for prod with Flyway/Liquibase.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# H2 Console (disabled when using PostgreSQL)
spring.h2.console.enabled=false

# Schema initialization for Spring Session JDBC tables (first run in dev)
spring.session.jdbc.initialize-schema=always

# Session Management
spring.session.store-type=jdbc
spring.session.timeout=30m

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Logging
logging.level.com.mediconnect=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# Actuator
management.endpoints.web.exposure.include=health,info,metrics

# OpenRouter AI Configuration
# Get your API key from https://openrouter.ai/keys
openrouter.api.key=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
openrouter.api.url=https://openrouter.ai/api/v1/chat/completions
openrouter.model=google/gemma-2-9b-it:free